

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jan 31 20:02:44 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    13   000000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     _PORTAbits	set	3968
    50   000000                     _TRISAbits	set	3986
    51   000000                     _TRISB	set	3987
    52   000000                     _ADCON1	set	4033
    53   000000                     _LATB	set	3978
    54                           
    55                           ; #config settings
    56                           
    57                           	psect	cinit
    58   007F3C                     __pcinit:
    59                           	callstack 0
    60   007F3C                     start_initialization:
    61                           	callstack 0
    62   007F3C                     __initialization:
    63                           	callstack 0
    64                           
    65                           ; Clear objects allocated to COMRAM (2 bytes)
    66   007F3C  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    67   007F3E  6A01               	clrf	__pbssCOMRAM& (0+255),c
    68   007F40                     end_of_initialization:
    69                           	callstack 0
    70   007F40                     __end_of__initialization:
    71                           	callstack 0
    72   007F40  0100               	movlb	0
    73   007F42  EFA3  F03F         	goto	_main	;jump to C main() function
    74                           
    75                           	psect	bssCOMRAM
    76   000001                     __pbssCOMRAM:
    77                           	callstack 0
    78   000001                     _sumValue:
    79                           	callstack 0
    80   000001                     	ds	2
    81                           
    82                           	psect	cstackCOMRAM
    83   000000                     __pcstackCOMRAM:
    84                           	callstack 0
    85   000000                     
    86                           ; 1 bytes @ 0x0
    87 ;;
    88 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    89 ;;
    90 ;; *************** function _main *****************
    91 ;; Defined at:
    92 ;;		line 18 in file "main.c"
    93 ;; Parameters:    Size  Location     Type
    94 ;;		None
    95 ;; Auto vars:     Size  Location     Type
    96 ;;		None
    97 ;; Return value:  Size  Location     Type
    98 ;;                  1    wreg      void 
    99 ;; Registers used:
   100 ;;		wreg, status,2, status,0
   101 ;; Tracked objects:
   102 ;;		On entry : 0/0
   103 ;;		On exit  : 0/0
   104 ;;		Unchanged: 0/0
   105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   106 ;;      Params:         0       0       0       0       0       0       0       0       0
   107 ;;      Locals:         0       0       0       0       0       0       0       0       0
   108 ;;      Temps:          0       0       0       0       0       0       0       0       0
   109 ;;      Totals:         0       0       0       0       0       0       0       0       0
   110 ;;Total ram usage:        0 bytes
   111 ;; This function calls:
   112 ;;		Nothing
   113 ;; This function is called by:
   114 ;;		Startup code after reset
   115 ;; This function uses a non-reentrant model
   116 ;;
   117                           
   118                           	psect	text0
   119   007F46                     __ptext0:
   120                           	callstack 0
   121   007F46                     _main:
   122                           	callstack 31
   123   007F46                     
   124                           ;main.c: 19:     ADCON1 = 0X0F;
   125   007F46  0E0F               	movlw	15
   126   007F48  6EC1               	movwf	193,c	;volatile
   127                           
   128                           ;main.c: 20:     TRISB = 0;
   129   007F4A  0E00               	movlw	0
   130   007F4C  6E93               	movwf	147,c	;volatile
   131   007F4E                     
   132                           ;main.c: 21:     TRISAbits.RA0 = 1;
   133   007F4E  8092               	bsf	146,0,c	;volatile
   134   007F50                     
   135                           ;main.c: 22:     TRISAbits.RA1 = 1;
   136   007F50  8292               	bsf	146,1,c	;volatile
   137   007F52                     
   138                           ;main.c: 23:     TRISAbits.RA2 = 1;
   139   007F52  8492               	bsf	146,2,c	;volatile
   140   007F54                     l720:
   141                           
   142                           ;main.c: 26:         if(PORTAbits.RA0 == 1 ){
   143   007F54  A080               	btfss	128,0,c	;volatile
   144   007F56  EFAF  F03F         	goto	u11
   145   007F5A  EFB1  F03F         	goto	u10
   146   007F5E                     u11:
   147   007F5E  EFC9  F03F         	goto	l18
   148   007F62                     u10:
   149   007F62                     
   150                           ;main.c: 27:             sumValue += 1;
   151   007F62  4A01               	infsnz	_sumValue^0,f,c
   152   007F64  2A02               	incf	(_sumValue+1)^0,f,c
   153   007F66                     
   154                           ;main.c: 28:             if(sumValue == 255){
   155   007F66  2801               	incf	_sumValue^0,w,c
   156   007F68  1002               	iorwf	(_sumValue+1)^0,w,c
   157   007F6A  A4D8               	btfss	status,2,c
   158   007F6C  EFBA  F03F         	goto	u21
   159   007F70  EFBC  F03F         	goto	u20
   160   007F74                     u21:
   161   007F74  EFC0  F03F         	goto	l20
   162   007F78                     u20:
   163   007F78                     
   164                           ;main.c: 29:                 sumValue =0;
   165   007F78  0E00               	movlw	0
   166   007F7A  6E02               	movwf	(_sumValue+1)^0,c
   167   007F7C  0E00               	movlw	0
   168   007F7E  6E01               	movwf	_sumValue^0,c
   169   007F80                     l20:
   170   007F80  B080               	btfsc	128,0,c	;volatile
   171   007F82  EFC5  F03F         	goto	u31
   172   007F86  EFC7  F03F         	goto	u30
   173   007F8A                     u31:
   174   007F8A  EFC0  F03F         	goto	l20
   175   007F8E                     u30:
   176   007F8E  EFFA  F03F         	goto	l23
   177   007F92                     l18:
   178   007F92  A280               	btfss	128,1,c	;volatile
   179   007F94  EFCE  F03F         	goto	u41
   180   007F98  EFD0  F03F         	goto	u40
   181   007F9C                     u41:
   182   007F9C  EFE8  F03F         	goto	l24
   183   007FA0                     u40:
   184   007FA0                     
   185                           ;main.c: 34:             sumValue -= 1;
   186   007FA0  0601               	decf	_sumValue^0,f,c
   187   007FA2  A0D8               	btfss	status,0,c
   188   007FA4  0602               	decf	(_sumValue+1)^0,f,c
   189   007FA6                     
   190                           ;main.c: 35:             if(sumValue == 0){
   191   007FA6  5001               	movf	_sumValue^0,w,c
   192   007FA8  1002               	iorwf	(_sumValue+1)^0,w,c
   193   007FAA  A4D8               	btfss	status,2,c
   194   007FAC  EFDA  F03F         	goto	u51
   195   007FB0  EFDC  F03F         	goto	u50
   196   007FB4                     u51:
   197   007FB4  EFDF  F03F         	goto	l26
   198   007FB8                     u50:
   199   007FB8                     
   200                           ;main.c: 36:                 sumValue =255;
   201   007FB8  0E00               	movlw	0
   202   007FBA  6E02               	movwf	(_sumValue+1)^0,c
   203   007FBC  6801               	setf	_sumValue^0,c
   204   007FBE                     l26:
   205   007FBE  B280               	btfsc	128,1,c	;volatile
   206   007FC0  EFE4  F03F         	goto	u61
   207   007FC4  EFE6  F03F         	goto	u60
   208   007FC8                     u61:
   209   007FC8  EFDF  F03F         	goto	l26
   210   007FCC                     u60:
   211   007FCC  EFFA  F03F         	goto	l23
   212   007FD0                     l24:
   213   007FD0  A480               	btfss	128,2,c	;volatile
   214   007FD2  EFED  F03F         	goto	u71
   215   007FD6  EFEF  F03F         	goto	u70
   216   007FDA                     u71:
   217   007FDA  EFFA  F03F         	goto	l23
   218   007FDE                     u70:
   219   007FDE                     
   220                           ;main.c: 41:             sumValue = 0;
   221   007FDE  0E00               	movlw	0
   222   007FE0  6E02               	movwf	(_sumValue+1)^0,c
   223   007FE2  0E00               	movlw	0
   224   007FE4  6E01               	movwf	_sumValue^0,c
   225   007FE6                     l31:
   226   007FE6  B480               	btfsc	128,2,c	;volatile
   227   007FE8  EFF8  F03F         	goto	u81
   228   007FEC  EFFA  F03F         	goto	u80
   229   007FF0                     u81:
   230   007FF0  EFF3  F03F         	goto	l31
   231   007FF4                     u80:
   232   007FF4                     l23:
   233                           
   234                           ;main.c: 44:         LATB = sumValue;
   235   007FF4  C001  FF8A         	movff	_sumValue,3978	;volatile
   236   007FF8  EFAA  F03F         	goto	l720
   237   007FFC  EF00  F000         	goto	start
   238   008000                     __end_of_main:
   239                           	callstack 0
   240   000000                     
   241                           	psect	rparam
   242   000000                     
   243                           	psect	idloc
   244                           
   245                           ;Config register IDLOC0 @ 0x200000
   246                           ;	unspecified, using default values
   247   200000                     	org	2097152
   248   200000  FF                 	db	255
   249                           
   250                           ;Config register IDLOC1 @ 0x200001
   251                           ;	unspecified, using default values
   252   200001                     	org	2097153
   253   200001  FF                 	db	255
   254                           
   255                           ;Config register IDLOC2 @ 0x200002
   256                           ;	unspecified, using default values
   257   200002                     	org	2097154
   258   200002  FF                 	db	255
   259                           
   260                           ;Config register IDLOC3 @ 0x200003
   261                           ;	unspecified, using default values
   262   200003                     	org	2097155
   263   200003  FF                 	db	255
   264                           
   265                           ;Config register IDLOC4 @ 0x200004
   266                           ;	unspecified, using default values
   267   200004                     	org	2097156
   268   200004  FF                 	db	255
   269                           
   270                           ;Config register IDLOC5 @ 0x200005
   271                           ;	unspecified, using default values
   272   200005                     	org	2097157
   273   200005  FF                 	db	255
   274                           
   275                           ;Config register IDLOC6 @ 0x200006
   276                           ;	unspecified, using default values
   277   200006                     	org	2097158
   278   200006  FF                 	db	255
   279                           
   280                           ;Config register IDLOC7 @ 0x200007
   281                           ;	unspecified, using default values
   282   200007                     	org	2097159
   283   200007  FF                 	db	255
   284                           
   285                           	psect	config
   286                           
   287                           ;Config register CONFIG1L @ 0x300000
   288                           ;	PLL Prescaler Selection bits
   289                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   290                           ;	System Clock Postscaler Selection bits
   291                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   292                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   293                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   294   300000                     	org	3145728
   295   300000  00                 	db	0
   296                           
   297                           ;Config register CONFIG1H @ 0x300001
   298                           ;	Oscillator Selection bits
   299                           ;	FOSC = HS, HS oscillator (HS)
   300                           ;	Fail-Safe Clock Monitor Enable bit
   301                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   302                           ;	Internal/External Oscillator Switchover bit
   303                           ;	IESO = OFF, Oscillator Switchover mode disabled
   304   300001                     	org	3145729
   305   300001  0C                 	db	12
   306                           
   307                           ;Config register CONFIG2L @ 0x300002
   308                           ;	Power-up Timer Enable bit
   309                           ;	PWRT = OFF, PWRT disabled
   310                           ;	Brown-out Reset Enable bits
   311                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   312                           ;	Brown-out Reset Voltage bits
   313                           ;	BORV = 3, Minimum setting 2.05V
   314                           ;	USB Voltage Regulator Enable bit
   315                           ;	VREGEN = OFF, USB voltage regulator disabled
   316   300002                     	org	3145730
   317   300002  1F                 	db	31
   318                           
   319                           ;Config register CONFIG2H @ 0x300003
   320                           ;	Watchdog Timer Enable bit
   321                           ;	WDT = ON, WDT enabled
   322                           ;	Watchdog Timer Postscale Select bits
   323                           ;	WDTPS = 32768, 1:32768
   324   300003                     	org	3145731
   325   300003  1F                 	db	31
   326                           
   327                           ; Padding undefined space
   328   300004                     	org	3145732
   329   300004  FF                 	db	255
   330                           
   331                           ;Config register CONFIG3H @ 0x300005
   332                           ;	CCP2 MUX bit
   333                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   334                           ;	PORTB A/D Enable bit
   335                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   336                           ;	Low-Power Timer 1 Oscillator Enable bit
   337                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   338                           ;	MCLR Pin Enable bit
   339                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   340   300005                     	org	3145733
   341   300005  83                 	db	131
   342                           
   343                           ;Config register CONFIG4L @ 0x300006
   344                           ;	Stack Full/Underflow Reset Enable bit
   345                           ;	STVREN = ON, Stack full/underflow will cause Reset
   346                           ;	Single-Supply ICSP Enable bit
   347                           ;	LVP = ON, Single-Supply ICSP enabled
   348                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   349                           ;	ICPRT = OFF, ICPORT disabled
   350                           ;	Extended Instruction Set Enable bit
   351                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   352                           ;	Background Debugger Enable bit
   353                           ;	DEBUG = 0x1, unprogrammed default
   354   300006                     	org	3145734
   355   300006  85                 	db	133
   356                           
   357                           ; Padding undefined space
   358   300007                     	org	3145735
   359   300007  FF                 	db	255
   360                           
   361                           ;Config register CONFIG5L @ 0x300008
   362                           ;	Code Protection bit
   363                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   364                           ;	Code Protection bit
   365                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   366                           ;	Code Protection bit
   367                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   368                           ;	Code Protection bit
   369                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   370   300008                     	org	3145736
   371   300008  0F                 	db	15
   372                           
   373                           ;Config register CONFIG5H @ 0x300009
   374                           ;	Boot Block Code Protection bit
   375                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   376                           ;	Data EEPROM Code Protection bit
   377                           ;	CPD = OFF, Data EEPROM is not code-protected
   378   300009                     	org	3145737
   379   300009  C0                 	db	192
   380                           
   381                           ;Config register CONFIG6L @ 0x30000A
   382                           ;	Write Protection bit
   383                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   384                           ;	Write Protection bit
   385                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   386                           ;	Write Protection bit
   387                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   388                           ;	Write Protection bit
   389                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   390   30000A                     	org	3145738
   391   30000A  0F                 	db	15
   392                           
   393                           ;Config register CONFIG6H @ 0x30000B
   394                           ;	Configuration Register Write Protection bit
   395                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   396                           ;	Boot Block Write Protection bit
   397                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   398                           ;	Data EEPROM Write Protection bit
   399                           ;	WRTD = OFF, Data EEPROM is not write-protected
   400   30000B                     	org	3145739
   401   30000B  E0                 	db	224
   402                           
   403                           ;Config register CONFIG7L @ 0x30000C
   404                           ;	Table Read Protection bit
   405                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   406                           ;	Table Read Protection bit
   407                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   408                           ;	Table Read Protection bit
   409                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   410                           ;	Table Read Protection bit
   411                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   412   30000C                     	org	3145740
   413   30000C  0F                 	db	15
   414                           
   415                           ;Config register CONFIG7H @ 0x30000D
   416                           ;	Boot Block Table Read Protection bit
   417                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   418   30000D                     	org	3145741
   419   30000D  40                 	db	64
   420                           tosu	equ	0xFFF
   421                           tosh	equ	0xFFE
   422                           tosl	equ	0xFFD
   423                           stkptr	equ	0xFFC
   424                           pclatu	equ	0xFFB
   425                           pclath	equ	0xFFA
   426                           pcl	equ	0xFF9
   427                           tblptru	equ	0xFF8
   428                           tblptrh	equ	0xFF7
   429                           tblptrl	equ	0xFF6
   430                           tablat	equ	0xFF5
   431                           prodh	equ	0xFF4
   432                           prodl	equ	0xFF3
   433                           indf0	equ	0xFEF
   434                           postinc0	equ	0xFEE
   435                           postdec0	equ	0xFED
   436                           preinc0	equ	0xFEC
   437                           plusw0	equ	0xFEB
   438                           fsr0h	equ	0xFEA
   439                           fsr0l	equ	0xFE9
   440                           wreg	equ	0xFE8
   441                           indf1	equ	0xFE7
   442                           postinc1	equ	0xFE6
   443                           postdec1	equ	0xFE5
   444                           preinc1	equ	0xFE4
   445                           plusw1	equ	0xFE3
   446                           fsr1h	equ	0xFE2
   447                           fsr1l	equ	0xFE1
   448                           bsr	equ	0xFE0
   449                           indf2	equ	0xFDF
   450                           postinc2	equ	0xFDE
   451                           postdec2	equ	0xFDD
   452                           preinc2	equ	0xFDC
   453                           plusw2	equ	0xFDB
   454                           fsr2h	equ	0xFDA
   455                           fsr2l	equ	0xFD9
   456                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       2       1        2.1%
BITBIGSFRh          3E      0       0      21        0.0%
BITBIGSFRlh         2D      0       0      22        0.0%
BITBIGSFRlll        20      0       0      25        0.0%
BITBIGSFRllhl        9      0       0      24        0.0%
BITBIGSFRllhh        7      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       2       3        0.0%
DATA                 0      0       2       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jan 31 20:02:44 2024

                     l20 7F80                       l31 7FE6                       l23 7FF4  
                     l24 7FD0                       l26 7FBE                       l18 7F92  
                     u10 7F62                       u11 7F5E                       u20 7F78  
                     u21 7F74                       u30 7F8E                       u31 7F8A  
                     u40 7FA0                       u41 7F9C                       u50 7FB8  
                     u51 7FB4                       u60 7FCC                       u61 7FC8  
                     u70 7FDE                       u71 7FDA                       u80 7FF4  
                     u81 7FF0                      l720 7F54                      l712 7F46  
                    l730 7FA6                      l722 7F62                      l714 7F4E  
                    l732 7FB8                      l724 7F66                      l716 7F50  
                    l734 7FDE                      l726 7F78                      l718 7F52  
                    l728 7FA0                     _LATB 000F8A                     _main 7F46  
                   start 0000             ___param_bank 000000                    ?_main 0000  
                  _TRISB 000F93                    status 000FD8          __initialization 7F3C  
           __end_of_main 8000                   ??_main 0000            __activetblptr 000000  
                 _ADCON1 000FC1                   isa$std 000001               __accesstop 0060  
__end_of__initialization 7F40            ___rparam_used 000001           __pcstackCOMRAM 0000  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7F3C  
                __ramtop 0800                  __ptext0 7F46     end_of_initialization 7F40  
              _PORTAbits 000F80                _TRISAbits 000F92      start_initialization 7F3C  
            __pbssCOMRAM 0001                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 000000                 _sumValue 0001  
